{
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "IngressSpec describes the Ingress the user wishes to exist.", 
  "properties": {
    "rules": {
      "items": {
        "additionalProperties": false, 
        "description": "IngressRule represents the rules mapping the paths under a specified host to the related backend services. Incoming requests are first evaluated for a host match, then routed to the backend associated with the matching IngressRuleValue.", 
        "properties": {
          "host": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "Host is the fully qualified domain name of a network host, as defined by RFC 3986. Note the following deviations from the \"host\" part of the URI as defined in the RFC: 1. IPs are not allowed. Currently an IngressRuleValue can only apply to the\n\t  IP in the Spec of the parent Ingress.\n2. The `:` delimiter is not respected because ports are not allowed.\n\t  Currently the port of an Ingress is implicitly :80 for http and\n\t  :443 for https.\nBoth these may change in the future. Incoming requests are matched against the host before the IngressRuleValue. If the host is unspecified, the Ingress routes all traffic based on the specified IngressRuleValue."
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "A list of host rules used to configure the Ingress. If unspecified, or no rule matches, all traffic is sent to the default backend."
    }, 
    "tls": {
      "items": {
        "additionalProperties": false, 
        "description": "IngressTLS describes the transport layer security associated with an Ingress.", 
        "properties": {
          "hosts": {
            "items": {
              "type": [
                "string", 
                "null"
              ]
            }, 
            "type": [
              "array", 
              "null"
            ], 
            "description": "Hosts are a list of hosts included in the TLS certificate. The values in this list must match the name/s used in the tlsSecret. Defaults to the wildcard host setting for the loadbalancer controller fulfilling this Ingress, if left unspecified."
          }, 
          "secretName": {
            "type": [
              "string", 
              "null"
            ], 
            "description": "SecretName is the name of the secret used to terminate SSL traffic on 443. Field is left optional to allow SSL routing based on SNI hostname alone. If the SNI host in a listener conflicts with the \"Host\" header field used by an IngressRule, the SNI host is used for termination and value of the Host header is used for routing."
          }
        }
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "TLS configuration. Currently the Ingress only supports a single TLS port, 443. If multiple members of this list specify different hosts, they will be multiplexed on the same port according to the hostname specified through the SNI TLS extension, if the ingress controller fulfilling the ingress supports SNI."
    }, 
    "backend": {
      "additionalProperties": false, 
      "required": [
        "serviceName", 
        "servicePort"
      ], 
      "description": "IngressBackend describes all endpoints for a given service and port.", 
      "properties": {
        "serviceName": {
          "type": "string", 
          "description": "Specifies the name of the referenced service."
        }, 
        "servicePort": {
          "oneOf": [
            {
              "type": [
                "string", 
                "null"
              ]
            }, 
            {
              "type": "integer"
            }
          ]
        }
      }
    }
  }
}