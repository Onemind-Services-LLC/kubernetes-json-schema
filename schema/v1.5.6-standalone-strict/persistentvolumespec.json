{
  "$schema": "http://json-schema.org/schema#", 
  "type": "object", 
  "description": "PersistentVolumeSpec is the specification of a persistent volume.", 
  "properties": {
    "photonPersistentDisk": {
      "additionalProperties": false, 
      "required": [
        "pdID"
      ], 
      "description": "Represents a Photon Controller persistent disk resource.", 
      "properties": {
        "pdID": {
          "type": "string", 
          "description": "ID that identifies Photon Controller persistent disk"
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      }
    }, 
    "rbd": {
      "additionalProperties": false, 
      "required": [
        "monitors", 
        "image"
      ], 
      "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.", 
      "properties": {
        "secretRef": {
          "additionalProperties": false, 
          "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.", 
          "properties": {
            "name": {
              "type": [
                "string", 
                "null"
              ], 
              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
            }
          }
        }, 
        "image": {
          "type": "string", 
          "description": "The rados image name. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        }, 
        "keyring": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#rbd"
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        }, 
        "user": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "The rados user name. Default is admin. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        }, 
        "monitors": {
          "items": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "array", 
          "description": "A collection of Ceph monitors. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
        }, 
        "pool": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "The rados pool name. Default is rbd. More info: http://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it."
        }
      }
    }, 
    "capacity": {
      "additionalProperties": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": "object", 
      "description": "A description of the persistent volume's resources and capacity. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#capacity"
    }, 
    "claimRef": {
      "additionalProperties": false, 
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.", 
      "properties": {
        "kind": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Kind of the referent. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#types-kinds"
        }, 
        "name": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        }, 
        "namespace": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Namespace of the referent. More info: http://kubernetes.io/docs/user-guide/namespaces"
        }, 
        "apiVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "API version of the referent."
        }, 
        "fieldPath": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object."
        }, 
        "resourceVersion": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Specific resourceVersion to which this reference is made, if any. More info: http://releases.k8s.io/HEAD/docs/devel/api-conventions.md#concurrency-control-and-consistency"
        }, 
        "uid": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    }, 
    "persistentVolumeReclaimPolicy": {
      "type": [
        "string", 
        "null"
      ], 
      "description": "What happens to a persistent volume when released from its claim. Valid options are Retain (default) and Recycle. Recycling must be supported by the volume plugin underlying this persistent volume. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#recycling-policy"
    }, 
    "azureFile": {
      "additionalProperties": false, 
      "required": [
        "secretName", 
        "shareName"
      ], 
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.", 
      "properties": {
        "shareName": {
          "type": "string", 
          "description": "Share Name"
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        }, 
        "secretName": {
          "type": "string", 
          "description": "the name of secret that contains Azure Storage Account Name and Key"
        }
      }
    }, 
    "azureDisk": {
      "additionalProperties": false, 
      "required": [
        "diskName", 
        "diskURI"
      ], 
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.", 
      "properties": {
        "diskURI": {
          "type": "string", 
          "description": "The URI the data disk in the blob storage"
        }, 
        "diskName": {
          "type": "string", 
          "description": "The Name of the data disk in the blob storage"
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        }, 
        "cachingMode": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Host Caching mode: None, Read Only, Read Write."
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      }
    }, 
    "cinder": {
      "additionalProperties": false, 
      "required": [
        "volumeID"
      ], 
      "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.", 
      "properties": {
        "readOnly": {
          "type": "boolean", 
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
        }, 
        "volumeID": {
          "type": "string", 
          "description": "volume id used to identify the volume in cinder More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
        }
      }
    }, 
    "quobyte": {
      "additionalProperties": false, 
      "required": [
        "registry", 
        "volume"
      ], 
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.", 
      "properties": {
        "volume": {
          "type": "string", 
          "description": "Volume is a string that references an already created Quobyte volume by name."
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false."
        }, 
        "group": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Group to map volume access to Default is no group"
        }, 
        "registry": {
          "type": "string", 
          "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes"
        }, 
        "user": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "User to map volume access to Defaults to serivceaccount user"
        }
      }
    }, 
    "accessModes": {
      "items": {
        "type": [
          "string", 
          "null"
        ]
      }, 
      "type": [
        "array", 
        "null"
      ], 
      "description": "AccessModes contains all ways the volume can be mounted. More info: http://kubernetes.io/docs/user-guide/persistent-volumes#access-modes"
    }, 
    "glusterfs": {
      "additionalProperties": false, 
      "required": [
        "endpoints", 
        "path"
      ], 
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.", 
      "properties": {
        "path": {
          "type": "string", 
          "description": "Path is the Glusterfs volume path. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
        }, 
        "endpoints": {
          "type": "string", 
          "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: http://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
        }
      }
    }, 
    "fc": {
      "additionalProperties": false, 
      "required": [
        "targetWWNs", 
        "lun"
      ], 
      "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.", 
      "properties": {
        "readOnly": {
          "type": "boolean", 
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        }, 
        "targetWWNs": {
          "items": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "array", 
          "description": "Required: FC target worldwide names (WWNs)"
        }, 
        "lun": {
          "type": "integer", 
          "description": "Required: FC target lun number", 
          "format": "int32"
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      }
    }, 
    "nfs": {
      "additionalProperties": false, 
      "required": [
        "server", 
        "path"
      ], 
      "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.", 
      "properties": {
        "path": {
          "type": "string", 
          "description": "Path that is exported by the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
        }, 
        "server": {
          "type": "string", 
          "description": "Server is the hostname or IP address of the NFS server. More info: http://kubernetes.io/docs/user-guide/volumes#nfs"
        }
      }
    }, 
    "vsphereVolume": {
      "additionalProperties": false, 
      "required": [
        "volumePath"
      ], 
      "description": "Represents a vSphere volume resource.", 
      "properties": {
        "volumePath": {
          "type": "string", 
          "description": "Path that identifies vSphere volume vmdk"
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
        }
      }
    }, 
    "hostPath": {
      "additionalProperties": false, 
      "required": [
        "path"
      ], 
      "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.", 
      "properties": {
        "path": {
          "type": "string", 
          "description": "Path of the directory on the host. More info: http://kubernetes.io/docs/user-guide/volumes#hostpath"
        }
      }
    }, 
    "flexVolume": {
      "additionalProperties": false, 
      "required": [
        "driver"
      ], 
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin. This is an alpha feature and may change in future.", 
      "properties": {
        "secretRef": {
          "additionalProperties": false, 
          "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.", 
          "properties": {
            "name": {
              "type": [
                "string", 
                "null"
              ], 
              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
            }
          }
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        }, 
        "driver": {
          "type": "string", 
          "description": "Driver is the name of the driver to use for this volume."
        }, 
        "options": {
          "additionalProperties": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "object", 
          "description": "Optional: Extra command options if any."
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script."
        }
      }
    }, 
    "awsElasticBlockStore": {
      "additionalProperties": false, 
      "required": [
        "volumeID"
      ], 
      "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.", 
      "properties": {
        "readOnly": {
          "type": "boolean", 
          "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
        }, 
        "partition": {
          "type": "integer", 
          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).", 
          "format": "int32"
        }, 
        "volumeID": {
          "type": "string", 
          "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#awselasticblockstore"
        }
      }
    }, 
    "cephfs": {
      "additionalProperties": false, 
      "required": [
        "monitors"
      ], 
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.", 
      "properties": {
        "secretRef": {
          "additionalProperties": false, 
          "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.", 
          "properties": {
            "name": {
              "type": [
                "string", 
                "null"
              ], 
              "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
            }
          }
        }, 
        "secretFile": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        }, 
        "user": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Optional: User is the rados user name, default is admin More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        }, 
        "path": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /"
        }, 
        "monitors": {
          "items": {
            "type": [
              "string", 
              "null"
            ]
          }, 
          "type": "array", 
          "description": "Required: Monitors is a collection of Ceph monitors More info: http://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
        }
      }
    }, 
    "flocker": {
      "additionalProperties": false, 
      "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.", 
      "properties": {
        "datasetName": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated"
        }, 
        "datasetUUID": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "UUID of the dataset. This is unique identifier of a Flocker dataset"
        }
      }
    }, 
    "gcePersistentDisk": {
      "additionalProperties": false, 
      "required": [
        "pdName"
      ], 
      "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.", 
      "properties": {
        "readOnly": {
          "type": "boolean", 
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
        }, 
        "partition": {
          "type": "integer", 
          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk", 
          "format": "int32"
        }, 
        "pdName": {
          "type": "string", 
          "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#gcepersistentdisk"
        }
      }
    }, 
    "iscsi": {
      "additionalProperties": false, 
      "required": [
        "targetPortal", 
        "iqn", 
        "lun"
      ], 
      "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.", 
      "properties": {
        "targetPortal": {
          "type": "string", 
          "description": "iSCSI target portal. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260)."
        }, 
        "fsType": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: http://kubernetes.io/docs/user-guide/volumes#iscsi"
        }, 
        "readOnly": {
          "type": "boolean", 
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false."
        }, 
        "iqn": {
          "type": "string", 
          "description": "Target iSCSI Qualified Name."
        }, 
        "iscsiInterface": {
          "type": [
            "string", 
            "null"
          ], 
          "description": "Optional: Defaults to 'default' (tcp). iSCSI interface name that uses an iSCSI transport."
        }, 
        "lun": {
          "type": "integer", 
          "description": "iSCSI target lun number.", 
          "format": "int32"
        }
      }
    }
  }
}