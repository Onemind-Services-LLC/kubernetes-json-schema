{
  "description": "Pod Security Policy Spec defines the policy enforced.",
  "required": [
    "seLinux",
    "runAsUser",
    "supplementalGroups",
    "fsGroup"
  ],
  "properties": {
    "allowPrivilegeEscalation": {
      "description": "AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.",
      "type": "boolean"
    },
    "allowedCapabilities": {
      "description": "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field may be added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "allowedFlexVolumes": {
      "description": "AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"Volumes\" field.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "AllowedFlexVolume represents a single Flexvolume that is allowed to be used.",
        "required": [
          "driver"
        ],
        "properties": {
          "driver": {
            "description": "Driver is the name of the Flexvolume driver.",
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "allowedHostPaths": {
      "description": "is a white list of allowed host paths. Empty indicates that all host paths may be used.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "defines the host volume conditions that will be enabled by a policy for pods to use. It requires the path prefix to be defined.",
        "properties": {
          "pathPrefix": {
            "description": "is the path prefix that the host volume must match. It does not support `*`. Trailing slashes are trimmed when validating the path prefix with a host path.\n\nExamples: `/foo` would allow `/foo`, `/foo/` and `/foo/bar` `/foo` would not allow `/food` or `/etc/foo`",
            "type": [
              "string",
              "null"
            ]
          }
        },
        "additionalProperties": false
      }
    },
    "defaultAddCapabilities": {
      "description": "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capability in both DefaultAddCapabilities and RequiredDropCapabilities. Capabilities added here are implicitly allowed, and need not be included in the AllowedCapabilities list.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "defaultAllowPrivilegeEscalation": {
      "description": "DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.",
      "type": "boolean"
    },
    "fsGroup": {
      "description": "FSGroupStrategyOptions defines the strategy type and options used to create the strategy.",
      "properties": {
        "ranges": {
          "description": "Ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ID Range provides a min/max of an allowed range of IDs.",
            "required": [
              "min",
              "max"
            ],
            "properties": {
              "max": {
                "description": "Max is the end of the range, inclusive.",
                "type": "integer",
                "format": "int64"
              },
              "min": {
                "description": "Min is the start of the range, inclusive.",
                "type": "integer",
                "format": "int64"
              }
            },
            "additionalProperties": false
          }
        },
        "rule": {
          "description": "Rule is the strategy that will dictate what FSGroup is used in the SecurityContext.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "hostIPC": {
      "description": "hostIPC determines if the policy allows the use of HostIPC in the pod spec.",
      "type": "boolean"
    },
    "hostNetwork": {
      "description": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.",
      "type": "boolean"
    },
    "hostPID": {
      "description": "hostPID determines if the policy allows the use of HostPID in the pod spec.",
      "type": "boolean"
    },
    "hostPorts": {
      "description": "hostPorts determines which host port ranges are allowed to be exposed.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "description": "Host Port Range defines a range of host ports that will be enabled by a policy for pods to use.  It requires both the start and end to be defined.",
        "required": [
          "min",
          "max"
        ],
        "properties": {
          "max": {
            "description": "max is the end of the range, inclusive.",
            "type": "integer",
            "format": "int32"
          },
          "min": {
            "description": "min is the start of the range, inclusive.",
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "privileged": {
      "description": "privileged determines if a pod can request to be run as privileged.",
      "type": "boolean"
    },
    "readOnlyRootFilesystem": {
      "description": "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the PSP should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.",
      "type": "boolean"
    },
    "requiredDropCapabilities": {
      "description": "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ]
      }
    },
    "runAsUser": {
      "description": "Run A sUser Strategy Options defines the strategy type and any options used to create the strategy.",
      "required": [
        "rule"
      ],
      "properties": {
        "ranges": {
          "description": "Ranges are the allowed ranges of uids that may be used.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ID Range provides a min/max of an allowed range of IDs.",
            "required": [
              "min",
              "max"
            ],
            "properties": {
              "max": {
                "description": "Max is the end of the range, inclusive.",
                "type": "integer",
                "format": "int64"
              },
              "min": {
                "description": "Min is the start of the range, inclusive.",
                "type": "integer",
                "format": "int64"
              }
            },
            "additionalProperties": false
          }
        },
        "rule": {
          "description": "Rule is the strategy that will dictate the allowable RunAsUser values that may be set.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "seLinux": {
      "description": "SELinux  Strategy Options defines the strategy type and any options used to create the strategy.",
      "required": [
        "rule"
      ],
      "properties": {
        "rule": {
          "description": "type is the strategy that will dictate the allowable labels that may be set.",
          "type": "string"
        },
        "seLinuxOptions": {
          "description": "SELinuxOptions are the labels to be applied to the container",
          "properties": {
            "level": {
              "description": "Level is SELinux level label that applies to the container.",
              "type": [
                "string",
                "null"
              ]
            },
            "role": {
              "description": "Role is a SELinux role label that applies to the container.",
              "type": [
                "string",
                "null"
              ]
            },
            "type": {
              "description": "Type is a SELinux type label that applies to the container.",
              "type": [
                "string",
                "null"
              ]
            },
            "user": {
              "description": "User is a SELinux user label that applies to the container.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "supplementalGroups": {
      "description": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.",
      "properties": {
        "ranges": {
          "description": "Ranges are the allowed ranges of supplemental groups.  If you would like to force a single supplemental group then supply a single range with the same start and end.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ID Range provides a min/max of an allowed range of IDs.",
            "required": [
              "min",
              "max"
            ],
            "properties": {
              "max": {
                "description": "Max is the end of the range, inclusive.",
                "type": "integer",
                "format": "int64"
              },
              "min": {
                "description": "Min is the start of the range, inclusive.",
                "type": "integer",
                "format": "int64"
              }
            },
            "additionalProperties": false
          }
        },
        "rule": {
          "description": "Rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "volumes": {
      "description": "volumes is a white list of allowed volume plugins.  Empty indicates that all plugins may be used.",
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ]
      }
    }
  },
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}